
	     Win32/ UNIX / X680x0 Human68k バイナリテキストコンバータ

		       ish/uuencode 対応 aish v1.13
								小笠原博之

  X680x0 用の ish/uuencode 変換プログラムである aish を UNIX 上でも動くよう
にしたものです。ish, uuencode 共に区別なく扱え、また ish でもある程度長いファ
イル名を扱えるという特徴を持っています。というのも、ish はもともと MS-DOS 上
のものであったために、ヘッダに含むことのできるファイル名が短く、8文字 + 拡張
子3文字 で切られてしまうからです。このプログラムではコメント行から元のファイ
ル名を推定して補完します。詳しくは aish.doc を参照して下さい。ish のマルチボ
リューム形式のエンコードもできます。MIME の Base64 の展開もできます。



● ish とは？

  パソコン通信等でバイナリファイル転送するために石塚匡哉氏によって考え出され
たもので、任意のファイルをテキストファイルに変換することができます。UNIX でよ
く用いられる uuencode/uudecode と目的は同じです。ish の特徴はエラー判定ができ
ること、ちょっとしたエラーなら自己修復すること、8bit 変換も可能で効率が良いこ
と、分割が可能で自動結合ができること、等があります。



● UNIX 版 install 方法

  通常はそのまま make だけで OK です。その後必要なら Makefile 内の DSTDIR (イ
ンストール先ディレクトリ) を修正し、make install して下さい。

  使い方は aish.doc を参照して下さい。ただしこのドキュメントは、X680x0 版をバ
イナリ配布する場合のものと共通になっています。

  もし make していて overwrite of file ... もしくは ai_crcmv.o が見つからない
というようなコンパイルエラーが出て止まってしまったら、一旦 make clean した後
 make oldc と実行して下さい。



● install 時の修正

  install はできたものの ish のタイムスタンプの復元がうまく行かない時は以下
のように修正を加えてみて下さい。

  ・EWS4800 EWS-UX/V
	/usr/ucb/cc ではなく /bin/cc でコンパイルする必要があります。Makefile
	中 CC = /bin/cc としたのち make oldc としてコンパイルして下さい。

  ・HP9000 HP-UX
	make してコンパイルが始まったら ^C で一度止め、syschk.h の２行目を
	「#define SYSV」に修正して再び make を行って下さい。

  開発は NEWS-OS 4.2、SunOS 4.1.1 および Human68k v2.02/v3.02 上で行いました。
これらの機種では修正は必要ありません。また上記の EWS、HP の他、SunOS 4.1.3、
 RS/6000 AIX v3.2.4, JUltrix v2.2 でもそのままでコンパイルできることを確認し
ています。(詳しい動作確認まで行ったわけではない)



● X68K でのコンパイル

  付属ソースは、Makefile の指定箇所の変更で ALL-C バージョンとして X68K でコ
ンパイルすることができます。確認したライブラリは XC ですが、libc でもまず問題
なくコンパイルできるものと思われます。ただし ALL-C バージョンでは標準入出力の
再オープンまではしていませんので、バイナリを通さないようにして下さい。

  コンパイルするには、gcc, has, hlk などそれなりの開発環境がそろっていなけれ
ばなりません。再コンパイルを保証するものでもありません。



● Win32 でのコンパイル

  win32.mak を Makefile として使ってください。



● ishcat コマンド

	ishcat [-{7|8|s|n|u}] [file ..]

 ishcat は aish を呼び出すシェルスクリプトであり、バイナリファイルをテキスト
変換して標準出力に出力するコマンドです。デフォルトで ish jis7 モードで変換し
ます。-s, -7, -8, -n, -u スイッチで出力フォーマットを指定できます。

  スイッチもファイル名も指定せず、引数なしで ishcat を実行した場合は、標準入
力から読み込んだ ish テキストをデコードします。このとき不要な入力行のエコー
バックはせず、展開ファイル名のみ表示します。


・使用例その１, ish を使ったファイル転送  WS -> パソコン

	パソコンから RS232C を使って WS へログインしている状態で、バイナリ
	ファイルをパソコンに転送したい場合 (ダウンロード)

		パソコン側でログファイル保存状態にしてから

		% ishcat バイナリファイル

		のように実行。転送が終わったら、あとでパソコンのログファイル
		を ish デコードする。


・使用例その２, ish を使ったファイル転送  パソコン -> WS

	パソコンから RS232C を使って WS へログインしている状態で、バイナリ
	ファイルをパソコンから WS に転送したい場合 (アップロード)

		WS 側で

		% ishcat

		と実行する。パソコン側でバイナリファイルを ish 変換したものを
		用意し、テキスト送信機能を使ってアップロードを行う。送信が終
		わったら CTRL+D を押す。


パソコン側で、もしあるならリアルタイム ish エンコーダ/デコーダを併用すると便
利です。(X68K の場合は Ko-Window の koishenc が便利です)


--
小笠原博之 oga@art.udn.ne.jp

